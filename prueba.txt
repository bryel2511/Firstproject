Para añadir/configurar el nombre del usuario y el correo para trackear
los commits, se deben usar los siguientes comandos:

-git config --global user.name "xxxxx" 
-git config --global user.email "xxxxx"

El comando para los logs que ha sufrido un archivo se utiliza: 
git log xxxx.xxx

Para ver los cambios en especifico de una version a otra:
git show  xxxx.xxx

Para ver la diferencia entre dos commits en especifico se usará:
git diff idcommitreciente idcommitantiguo

Para volver a un commit especifico se utiliza el comando: 
git reset idcommit --hard
git reset idcommit --soft 
La diferencia entre el hard y el soft, es que el soft sigue manteniendo lo que esta en stagin

Para ver cambios especificos que se hicieron en los commits: 
git log --stat

Para revisar el estado de un archivo en un commit anterior, lo puedo hacer usando:
git checkout idcommit xxx.xxx 
Esto modificará el archivo a la versión del commit seleccionado. Esto se usa para volver a versiones anteriores
si se desea volver a la última versión del archivo (antes de hacer el checkout) que se encuentra en el repositorio, se usa:
git checkout master xxx.xxx

Repositorios Remotos

Cuando se trabaja con repositorios remotos, la manera de bajarme sus archivos es con el comando:
git clone url 
Esto bajará una copia de la rama master a mi directorio de trabajo y crea la base de datos de todos los cambios en mi repositorio local.
Cuando se tenga listos los archivos despues de los cambios respectivos se subirá los cambios al repositorio remoto con git push.

Git fetch
Trae las actualizaciones ejecutadas en el proyecto, pero lo hará al repositorio local ( no afecta los archivos en el directorio).
Git Merge
Permite fusionar los cambios que hay en mi repositorio local con mi directorio de trabajo. 

Git Pull
Otra manera de trabajar los cambios directamente a mi repositorio local y mi directorio de trabajo es con git pull.
Notas: 
-El commit más reciente es denominado "head". 
-Una manera de omitir el comando "git add ." es usar: git commit -am "xxxx". Esto funcionará para archivos que ya hayan sido agregados a stagin anteriormente.


Ramas
Cuando uno crea una rama, lo que se hace es crear una copia del último commit proveniente de la rama en donde uno se encuentra. 
Los cambios en esta rama no se verán en ninguna otra.

 



